{"mappings":"AASA;IACE,MAAM,WAAW;IACjB,UAAU,eAAe;IACzB,WAAW,gBAAgB;IAC3B,aAAa,kBAAkB;IAC/B,WAAW,gBAAgB;IAC3B,YAAY,iBAAiB;IAC7B,cAAc,mBAAmB;IACjC,WAAW,gBAAgB;IAC3B,YAAY,iBAAiB;IAC7B,cAAc,mBAAmB;IACjC,WAAW,gBAAgB;IAC3B,YAAY,iBAAiB;IAC7B,cAAc,mBAAmB;CAClC;AAED;IACE,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,MAAM,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,KAAK,MAAM,CAAC,CAAC;CAC/C;AAmGD,yBAAyB,OAAO,CAAC,EAAE,WAAW,EAAE,MAAM,CAAC,EAAE,aAAa,QA8BrE","sources":["src/src/index.ts","src/index.ts"],"sourcesContent":[null,"/**\n * A lightweight smooth scroll module\n *\n * @version 2.0.0\n * @author Charlie LEDUC <contact@pixeliste.fr>\n */\n\nconst _SCROLLTO_DURATION_ = 500;\n\nexport enum EasingFunc {\n  Linear = \"linear\",\n  EaseInQuad = \"easeInQuad\",\n  EaseOutQuad = \"easeOutQuad\",\n  EaseInOutQuad = \"easeInOutQuad\",\n  EaseInCubic = \"easeInCubic\",\n  EaseOutCubic = \"easeOutCubic\",\n  EaseInOutCubic = \"easeInOutCubic\",\n  EaseInQuart = \"easeInQuart\",\n  EaseOutQuart = \"easeOutQuart\",\n  EaseInOutQuart = \"easeInOutQuart\",\n  EaseInQuint = \"easeInQuint\",\n  EaseOutQuint = \"easeOutQuint\",\n  EaseInOutQuint = \"easeInOutQuint\"\n}\n\nexport interface ScrollOptions {\n  duration?: number;\n  offset?: number;\n  easing?: EasingFunc | ((t: number) => number);\n}\n\nfunction getEasing(\n  fn: EasingFunc | ((t: number) => number)\n): (t: number) => number {\n  if (typeof fn === \"function\") {\n    return fn;\n  }\n\n  switch (fn) {\n    case EasingFunc.Linear: {\n      // no easing, no acceleration\n      return (t: number): number => {\n        return t;\n      };\n    }\n    case EasingFunc.EaseInQuad: {\n      // accelerating from zero velocity\n      return (t: number): number => {\n        return t * t;\n      };\n    }\n    case EasingFunc.EaseOutQuad: {\n      // decelerating to zero velocity\n      return (t: number): number => {\n        return t * (2 - t);\n      };\n    }\n    case EasingFunc.EaseInOutQuad: {\n      // acceleration until halfway, then deceleration\n      return (t: number): number => {\n        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n      };\n    }\n    case EasingFunc.EaseInCubic: {\n      // accelerating from zero velocity\n      return (t: number): number => {\n        return t * t * t;\n      };\n    }\n    case EasingFunc.EaseOutCubic: {\n      // decelerating to zero velocity\n      return (t: number): number => {\n        return --t * t * t + 1;\n      };\n    }\n    case EasingFunc.EaseInOutCubic: {\n      // acceleration until halfway, then deceleration\n      return (t: number): number => {\n        return t < 0.5\n          ? 4 * t * t * t\n          : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n      };\n    }\n    case EasingFunc.EaseInQuart: {\n      // accelerating from zero velocity\n      return (t: number): number => {\n        return t * t * t * t;\n      };\n    }\n    case EasingFunc.EaseOutQuart: {\n      // decelerating to zero velocity\n      return (t: number): number => {\n        return 1 - --t * t * t * t;\n      };\n    }\n    case EasingFunc.EaseInOutQuart: {\n      // acceleration until halfway, then deceleration\n      return (t: number): number => {\n        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n      };\n    }\n    case EasingFunc.EaseInQuint: {\n      // accelerating from zero velocity\n      return (t: number): number => {\n        return t * t * t * t * t;\n      };\n    }\n    case EasingFunc.EaseOutQuint: {\n      // decelerating to zero velocity\n      return (t: number): number => {\n        return 1 + --t * t * t * t * t;\n      };\n    }\n    case EasingFunc.EaseInOutQuint: {\n      // acceleration until halfway, then deceleration\n      return (t: number): number => {\n        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n      };\n    }\n    default: {\n      // no easing, no acceleration\n      return (t: number): number => {\n        return t;\n      };\n    }\n  }\n}\n\nexport function scrollTo(element?: HTMLElement, params?: ScrollOptions) {\n  if (!element || typeof element.getBoundingClientRect !== \"function\") return;\n\n  const offset = params?.offset ?? 0;\n  const duration = params?.duration ?? _SCROLLTO_DURATION_;\n  const easingFn = getEasing(params?.easing ?? EasingFunc.EaseInOutQuad);\n\n  const sy = window.scrollY;\n  const elementY = sy + (element.getBoundingClientRect().top - offset);\n\n  const targetY =\n    document.body.scrollHeight - elementY < window.innerHeight\n      ? document.body.scrollHeight - window.innerHeight\n      : elementY;\n  const diff = targetY - sy;\n  let start: number;\n\n  if (!diff) return;\n\n  window.requestAnimationFrame(function step(timestamp) {\n    if (!start) start = timestamp;\n    const time = timestamp - start;\n    const percent = easingFn(Math.min(time / duration, 1));\n\n    window.scrollTo(0, sy + diff * percent);\n\n    if (time < duration) {\n      window.requestAnimationFrame(step);\n    }\n  });\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}